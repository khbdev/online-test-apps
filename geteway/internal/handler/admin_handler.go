package handler

import (
	"encoding/json"
	"geteway-service/internal/response"
	"geteway-service/internal/service"
	"io/ioutil"
	"net/http"
	"strconv"

	"github.com/gin-gonic/gin"
)

type AdminHandler struct {
	adminService *service.AdminService
}

// NewAdminHandler â€” yangi handler yaratish
func NewAdminHandler(adminService *service.AdminService) *AdminHandler {
	return &AdminHandler{adminService: adminService}
}

// CREATE â€” yangi admin yaratish
func (h *AdminHandler) Create(c *gin.Context) {
	body, err := ioutil.ReadAll(c.Request.Body)
	if err != nil {
		response.Error(c, http.StatusBadRequest, "bodyni oâ€˜qishda xatolik", err.Error())
		return
	}

	data, err := h.adminService.CreateAdmin(c, body)
	if err != nil {
		response.Error(c, http.StatusInternalServerError, "admin yaratilmadi", err.Error())
		return
	}

	response.Success(c, "admin yaratildi", data)
}

// GET ALL â€” barcha adminlar
func (h *AdminHandler) GetAll(c *gin.Context) {
	data, err := h.adminService.GetAdminList(c)
	if err != nil {
		response.Error(c, http.StatusInternalServerError, "adminlarni olishda xatolik", err.Error())
		return
	}

	response.Success(c, "adminlar roâ€˜yxati", data)
}

// GET BY ID â€” id orqali adminni olish
func (h *AdminHandler) GetByID(c *gin.Context) {
	idStr := c.Param("id")
	id, err := strconv.ParseUint(idStr, 10, 64)
	if err != nil {
		response.Error(c, http.StatusBadRequest, "id notoâ€˜gâ€˜ri formatda", err.Error())
		return
	}

	data, err := h.adminService.GetAdminByID(c, id)
	if err != nil {
		response.Error(c, http.StatusInternalServerError, "adminni olishda xatolik", err.Error())
		return
	}

	response.Success(c, "admin topildi", data)
}

// UPDATE â€” adminni yangilash
func (h *AdminHandler) Update(c *gin.Context) {
	// ðŸ§© URL dan id olish
	idStr := c.Param("id")
	id, err := strconv.ParseUint(idStr, 10, 64)
	if err != nil {
		response.Error(c, http.StatusBadRequest, "ID notoâ€˜gâ€˜ri formatda", err.Error())
		return
	}

	// ðŸ§© Body ni oâ€˜qish
	body, err := ioutil.ReadAll(c.Request.Body)
	if err != nil {
		response.Error(c, http.StatusBadRequest, "bodyni oâ€˜qishda xatolik", err.Error())
		return
	}

	// ðŸ§© JSON body ni map ga parse qilish
	var dataMap map[string]interface{}
	if err := json.Unmarshal(body, &dataMap); err != nil {
		response.Error(c, http.StatusBadRequest, "json parse xato", err.Error())
		return
	}

	// ðŸ§© ID ni body ichiga qoâ€˜shamiz
	dataMap["id"] = id

	// ðŸ§© Yangi body tayyorlaymiz (id qoâ€˜shilgan)
	newBody, _ := json.Marshal(dataMap)

	// ðŸ§© Servisga yuboramiz
	data, err := h.adminService.UpdateAdmin(c, newBody)
	if err != nil {
		response.Error(c, http.StatusInternalServerError, "admin yangilanmadi", err.Error())
		return
	}

	// âœ… Muvaffaqiyatli javob
	response.Success(c, "admin yangilandi", data)
}


// DELETE â€” adminni oâ€˜chirish
func (h *AdminHandler) Delete(c *gin.Context) {
	idStr := c.Param("id")
	id, err := strconv.ParseUint(idStr, 10, 64)
	if err != nil {
		response.Error(c, http.StatusBadRequest, "id notoâ€˜gâ€˜ri formatda", err.Error())
		return
	}

	data, err := h.adminService.DeleteAdmin(c, id)
	if err != nil {
		response.Error(c, http.StatusInternalServerError, "adminni oâ€˜chirishda xatolik", err.Error())
		return
	}

	response.Success(c, "admin oâ€˜chirildi", data)
}
